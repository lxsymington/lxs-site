$colours: (
  "base": (
    "black": hsl(0deg, 0%, 0%),
    "grey_1": hsl(0deg, 0%, 20%),
    "grey_2": hsl(0deg, 0%, 40%),
    "grey_3": hsl(0deg, 0%, 60%),
    "white": hsl(0deg, 0%, 100%),
  ),
  "colours": (
    "soft_yellow": hsl(51, 91%, 71%),
    "bright_orange": hsl(43, 95%, 63%),
    "moderate_orange": hsl(38, 96%, 54%),
    "vivid_orange": hsl(31, 95%, 53%),
    "dark_orange": hsl(13, 86%, 60%),
    "soft_red": hsl(352, 68%, 59%),
    "moderate_pink": hsl(335, 57%, 49%),
    "dark_pink": hsl(323, 68%, 39%),
    "dark_magenta": hsl(313, 83%, 30%),
    "very_dark_magenta": hsl(303, 98%, 22%),
    "moderate_violet": hsl(293, 100%, 18%),
    "very_dark_violet": hsl(279, 100%, 15%),
  ),
  "highlights": (
    0: hsl(343, 99%, 65%),
    30: hsl(28, 96%, 53%),
    60: hsl(44, 94%, 57%),
    90: hsl(63, 96%, 58%),
    120: hsl(95, 95%, 55%),
    150: hsl(160, 96%, 55%),
    180: hsl(175, 95%, 56%),
    210: hsl(187, 97%, 57%),
    240: hsl(200, 97%, 54%),
    270: hsl(249, 97%, 74%),
    300: hsl(293, 98%, 63%),
    330: hsl(317, 98%, 61%),
  ),
);

@function colour($group, $variant, $alpha: null) {
  @if not map_has_key($colours, $group) {
    @error "colour group (`#{$group}`) not found in colours (`#{$colours}`)";
  }

  $colour-group: map_get($colours, $group);

  @if not map_has_key($colour-group, $variant) {
    @error "variant (`#{$variant}`) not found in colour group (`#{$colour-group}`)";
  }

  $colour: map_get($colour-group, $variant);

  @if not type-of($colour) == color {
    @error "Invalid colour! Received: `#{$colour}`";
  }

  @if ($alpha != null) {
    @if ($alpha < 0 or $alpha > 100) {
      @error "alpha value out of bounds; percent value expected, value was `#{$alpha}`";
    }

    @return unquote(
      "hsla(
        #{hue($colour)},
        #{saturation($colour)},
        #{lightness($colour)},
        #{percentage($alpha / 100)}
      )"
    );
  }

  @return unquote(
    "hsl(
      #{hue($colour)},
      #{saturation($colour)},
      #{lightness($colour)}
    )"
  );
}
