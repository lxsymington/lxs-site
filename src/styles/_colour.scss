$colours: (
  "base": (
    "black": (
      0,
      0,
      0,
    ),
    "grey_1": (
      0,
      0,
      20,
    ),
    "grey_2": (
      0,
      0,
      40,
    ),
    "grey_3": (
      0,
      0,
      60,
    ),
    "white": (
      0,
      0,
      100,
    ),
  ),
  "colours": (
    "mostly_black": (
      0,
      0,
      1.6,
    ),
    "mostly_black_violet": (
      260.7,
      42,
      13.5,
    ),
    "very_dark_violet": (
      284,
      44.6,
      19.8,
    ),
    "very_dark_magenta": (
      303,
      46.6,
      25.7,
    ),
    "dark_moderate_pink": (
      316.6,
      49.7,
      34.3,
    ),
    "moderate_pink": (
      330,
      47.3,
      43.9,
    ),
    "moderate_red": (
      345.9,
      49.4,
      54.3,
    ),
    "soft_red": (
      7.8,
      66.5,
      61.4,
    ),
    "bright_orange": (
      27,
      85.7,
      58.8,
    ),
    "soft_orange": (
      36.9,
      89.7,
      62,
    ),
    "soft_yellow": (
      45.9,
      90.9,
      69.8,
    ),
    "pale_yellow": (
      59.4,
      100,
      81,
    ),
    "ivory": (
      38,
      20,
      81,
    ),
    "olive": (
      54,
      59,
      28,
    ),
    "ruby": (
      0,
      75,
      43,
    ),
    "tawny": (
      10,
      85,
      52,
    ),
    "apricot": (
      31,
      93,
      48,
    ),
  ),
);

@function colour($group, $variant, $alpha: null) {
  @if not map_has_key($colours, $group) {
    @error "colour group (`#{$group}`) not found in colours (`#{$colours}`)";
  }

  $colour-group: map_get($colours, $group);

  @if not map_has_key($colour-group, $variant) {
    @error "variant (`#{$variant}`) not found in colour group (`#{$colour-group}`)";
  }

  $colour: map_get($colour-group, $variant);

  @if ($alpha != null) {
    @if ($alpha < 0 or $alpha > 100) {
      @error "alpha value out of bounds; percent value expected, value was `#{$alpha}`";
    }

    @if ($alpha % 5 != 0) {
      @warn "please try and keep alpha values to 5% steps for consistency, value was `#{$alpha}`";
    }

    $colour: append($colour, $alpha, $separator: space);
  }

  @if length($colour) == 4 {
    @return unquote(
      "hsla(#{nth($colour, 1)}deg #{nth($colour, 2)}% #{nth($colour, 3)}% / #{nth($colour, 4)}%)"
    );
  } @else if length($colour) == 3 {
    @return unquote(
      "hsl(#{nth($colour, 1)}deg #{nth($colour, 2)}% #{nth($colour, 3)}%)"
    );
  } @else {
    @error "Incorrect number of colour values to make a valid hsl(a) colour! Received: `#{$colour}`";
  }
}
